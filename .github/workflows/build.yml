name: Build and Release
on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_and_release:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup vcpkg
      run: |
        git submodule update --init --recursive
        ./vcpkg/bootstrap-vcpkg.sh

    - name: Install dependencies
      run: |
        sudo apt-get install -y cmake
        sudo apt-get install -y libdbus-1-dev libxi-dev libxtst-dev # at-spi2-core
        sudo apt-get install -y libgtk-3-dev # gtk3

    - name: Run build script
      run: |
        cmake --preset ux-vcpkg \
            -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++" \
            -DVCPKG_TARGET_TRIPLET=x64-linux # static linking
        cmake --build --preset=ux-vcpkg-release

    # Extract the branch or tag name from github.ref
    - name: Extract branch or tag name
      id: extract_ref
      run: echo "::set-output name=branch_or_tag::$(echo ${{ github.ref }} | sed 's|.*/||')"

    # Create the release using the extracted value
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        tag_name: ${{ steps.extract_ref.outputs.branch_or_tag }}
        release_name: Release ${{ steps.extract_ref.outputs.branch_or_tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/bin/FusswegDatentools
        asset_name: project_executable
        asset_content_type: application/octet-stream
